use std::fs::File;
use std::io::{BufRead, BufReader};

fn main() {
    let f = File::open("./input.txt").expect("Unable to open input file");
    let f = BufReader::new(f);
    
    let mut mask: [bool; 512] = [false; 512];
    let mut input: Vec<[bool; 100]> = Vec::with_capacity(100);

    {
        let mut blank: bool = false;

        for line in f.lines() {
            let line = line.expect("Unable to read line");
            
            if line.trim().is_empty() {
                if !blank {
                    blank = true;
                    continue;
                }
                else {
                    break;
                }
            }

            if !blank {
                let mut cidx: usize = 0;
                for c in line.chars() {
                    match c {
                        '#' => {
                            mask[cidx] = true;
                        },
                        _ => {}
                    }
                    cidx += 1;
                }
            }
            else {
                let mut cidx: usize = 0;
                let mut vals: [bool; 100] = [false; 100];

                for c in line.chars() {
                    match c {
                        '#' => {
                            vals[cidx] = true;
                        },
                        _ => {}
                    }
                    cidx += 1;
                }

                input.push(vals);
            }
        }
    }

    
}